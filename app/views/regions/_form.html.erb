<%= simple_form_for(@region) do |f| %>
  <div class="clearfix">
    <div style="float:left;width:400px;margin-right:80px;">
      <%= f.input :name,
                  :input_html => { :style => 'width:400px;'},
                  :hint => 'A short, friendly name by which to remember this area.' %>
      <%= f.input :description,
                  :as => :text,
                  :input_html => { :rows => 4, :style => 'width:400px;height:200px'},
                  :hint => 'A sentence or two describing this area.' %>

      <div class="control-group string optional quantity">
        <label>How many images do you want from this area?</label>
        <div class="controls">
          Give me
          <input id="quantity" type="textfield" style="width:50px;" value="25" />
          images at least
          <input id="proximity" type="textfield" style="width:50px;" value="50" />
          meters apart.
        </div>
      </div>
    </div>
    <div style="width: 500px; float:left;margin-top:20px;margin-bottom:40px;">
      <div id="map" class="map" style="width: 500; height: 350;"></div>

      <div class="clearfix" style="margin-top:12px;">
        <%= image_tag("SS-drawn-polygon.png", :style => "width:70px;float:right;") %>
        <label>
          Pan and Zoom to find the area you wish to study.
          <br />
          Draw a polygon by clicking on the map.</label>
      </div>



      <div id="found-id" style="font-size:larger;"></div>
    </div>
  </div>

  <% if @study %>
    <%= hidden_field_tag :study_id, @study.id %>
  <% end %>
  <% if @region_set %>
    <%= hidden_field_tag :region_set_id, @region_set.id %>
  <% end %>
  <% if !@create_set.nil? %>
    <%= hidden_field_tag :create_set,  true %>
  <% end %>
  <%= hidden_field_tag   :points %>
  <%= hidden_field_tag   :add_another %>

  <%= f.input :latitude,  :as => :hidden %>
  <%= f.input :longitude, :as => :hidden %>
  <%= f.input :zoom,      :as => :hidden %>
  <%= f.input :polygon,   :as => :hidden %>

  <div class="actions">
    <button type="button" class="btn btn-primary" onclick="addAndSubmit('true');">
      <i class="icon-plus-sign icon-white"></i> Save and Add Another
    </button>
    <button type="button" class="btn btn-primary" onclick="addAndSubmit('false');">
      <i class="icon-ok icon-white"></i> Save and Return to Study
    </button>
  </div>


<% end %>


<script type="text/javascript">

  var handler;
  window.onload = function () {
    handler = new ss.handler.Polygon('map');
  }

  function addAndSubmit(addAnother) {
    addPoints();
    document.getElementById('add_another').value = addAnother;
    submitCheck(addAnother);

  }

  function submitCheck() {
    if (ss.handler.Polygon.populated) {
      // Lets build a string representation of the polygon
      var polygon_string = ss.handler.Polygon.path.getAt(0);
      for (var i = 1; i < ss.handler.Polygon.path.length; ++i) {
        polygon_string = polygon_string + ', ' + ss.handler.Polygon.path.getAt(i);
      }

      // Lets build a string representation of the locations
      var location_string = ss.handler.Polygon.locations.getAt(0);
      for (var i = 1; i < ss.handler.Polygon.locations.length; ++i) {
        location_string = location_string + ', ' + ss.handler.Polygon.locations.getAt(i);
      }

      // Next lets record some of this information in the form
      document.getElementById('points').value = location_string; // should be json?
      document.getElementById('region_polygon').value = polygon_string; // should be json?
      document.getElementById('region_zoom').value = ss.handler.Polygon.map.zoom;

      var center = ss.handler.Polygon.map.getCenter();
      document.getElementById('region_latitude').value = center.lat();
      document.getElementById('region_longitude').value = center.lng();

      // Actually submit the form
      document.getElementById('new_region').submit();
    }
    else {
      // If the polygon has not been populated, let's keep trying
      setTimeout(function() {
        submitCheck();
      }, 500);
    }
  }

  function addPoints() {
    if (ss.handler.Polygon.editable) {
      handler.lock();
    }
    handler.addPoints(
      document.getElementById('quantity').value,
      document.getElementById('proximity').value,
      function() {
        $('#found-id').html('Found <strong>' + ss.handler.Polygon.locations.length + '</strong> images');
        }); // found-id should probably be refactored as a callback
  }

</script>
